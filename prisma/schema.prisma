generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [postgis(version: "3.3.2")]
}

enum FieldCategory {
  BUILDING
  TUNNELS
  CHAIN_HOUSE
  GROWTH_HOUSES
  NETWORK_COVERAGE
  OPEN_SPACE
}

enum FieldStatus {
  IRRELEVANT
  TAKEN_CARE_OF
  REQUIRES_CARE
  IN_FOCAL_CARE
  UNDER_THE_CARE_OF_AN_AREA_MANAGER
  UNDER_THE_CARE_OF_A_COORDINATOR
  NOT_IN_TREATMENT
  ON_HOLD
}

enum Familiarity {
  NOT_RELEVANT
  NOT_KNOWN
  KNOWN_PICKED
  KNOWN_NOT_PICKED
}

enum Region {
  SOUTH
  NORTH
  CENTER
}

enum Product {
  AVOCADO
  WATERMELON
  PECAN
  PEAR
  PINEAPPLE
  PERSIMMON
  PEACH
  ARTICHOKE
  GRAPEFRUIT
  BASIL
  SWEET_POTATO
  BANANAS
  GREEN_ONIONS
  ONION
  BROCCOLI
  GIVAY
  CARROT
  CHERRY
  SQUASH
  PUMPKIN
  QUINCE
  ACID
  LETTUCE
  EGGPLANT
  CORIANDER
  CABBAGE
  CAULIFLOWER
  LOVIA
  ARUM
  LEMON
  LIZZY
  TURNIP
  HOTEL
  CUCUMBER
  MANGO
  USED
  MANDARIN
  NECTARINE
  BEET
  CELERY
  TOMATO
  CHERRY_TOMATO
  BEET_LEAVES
  GRAPE
  POMELA
  POMLIT
  PARSLEY
  MUSHROOMS
  HOT_PEPPER
  PEPPER
  PASSIONFLOWER
  PAPAYA
  SABRA
  RADISH
  RADISHES
  COLORBY
  KIWI
  ZUCCHINI
  CLEMENTINE
  CARAMBOLA
  POMEGRANATE
  GARLIC
  GUARD
  PLUM
  LOQUAT
  DILL
  BEAN
  STRAWBERRIES
  CORN
  TAMAR
  POTATO
  APPLE
  ORANGE
}

model Field {
  id                     Int                    @id @default(autoincrement())
  name                   String
  product_name           Product?
  farmer_id              String?
  region                 Region
  familiarity            Familiarity
  familiarity_desc       String
  latitude               Float
  longitude              Float
  polygon                Unsupported("polygon")
  latest_satelite_metric Float?
  category               FieldCategory
  status                 FieldStatus
  status_date            DateTime
  delay_date             DateTime
  created_date           DateTime               @default(now())
  Missions               Mission[]
  Histories              History[]
  Satellites             Satellite[]
  Attractivenesses       Attractiveness[]

  @@index([category])
  @@index([familiarity])
  @@index([region])
  @@index([status])
  @@index([product_name, region, status])
}

model Satellite {
  id         Int      @id @default(autoincrement())
  date       DateTime
  field      Field    @relation(fields: [field_id], references: [id])
  field_id   Int
  statistics Json
  like       Boolean

  @@index([field_id])
}

model Attractiveness {
  id              Int      @id @default(autoincrement())
  field           Field    @relation(fields: [field_id], references: [id])
  field_id        Int
  date            DateTime
  mission_score   Float
  market_score    Float
  satellite_score Float
  average_score   Float
  like            Boolean

  @@index([field_id, date])
}

model Market {
  id           Int      @id @default(autoincrement())
  date         DateTime
  product_name Product
  price        Float

  @@index([product_name])
}

model Mission {
  id              Int      @id @default(autoincrement())
  date            DateTime
  field           Field    @relation(fields: [field_id], references: [id])
  field_id        Int
  product_name    Product
  amount_kg       Float
  was_ripe        String
  was_picked      Boolean
  not_picked_desc String

  @@index([field_id, product_name])
  @@index([product_name])
}

model History {
  id           Int      @id @default(autoincrement())
  date         DateTime @default(now())
  field        Field    @relation(fields: [field_id], references: [id])
  field_id     Int
  product_name Product
  farmer_id    String

  @@index([field_id, product_name])
}
